{"version":3,"sources":["Projects/Project.js","Projects/ProjectsList.js","App.js","reportWebVitals.js","index.js"],"names":["Project","project","id","checked","handleCheckBoxChange","className","type","onChange","name","castingDirector","postedDate","ProjectsList","importedProjectsWithId","require","projects","map","importedProject","i","useState","setProjects","Set","selectedIds","setSelectedIds","add","tempSet","delete","onClick","sortedProjects","sort","a","b","aDate","Date","bDate","valueOf","index","has","selectedProjects","filter","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"69BAkBeA,MAhBf,YAAkE,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,qBAKrC,OACI,qBAAIC,UAAU,MAAd,UACI,6BAAI,uBAAOC,KAAK,WAAWH,QAASA,EAASI,SALhC,WACjBH,EAAqBF,GAAKC,QAKtB,oBAAIE,UAAU,YAAd,SAA2BJ,EAAQO,OACnC,6BAAKP,EAAQK,OACb,6BAAKL,EAAQQ,kBACb,6BAAKR,EAAQS,iB,MCkDVC,MA1Df,WACI,IACMC,EADyBC,EAAQ,IAA/BC,SACgCC,KAAI,SAACC,EAAgBC,GAEzD,OADAD,EAAgBd,GAAKe,EACdD,KAEX,EAAgCE,mBAASN,GAAzC,mBAAOE,EAAP,KAAiBK,EAAjB,KACA,EAAsCD,oBAAS,kBAAM,IAAIE,OAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KACMlB,EAAuB,SAACF,EAAIC,GAE1BmB,EADAnB,EACe,SAACkB,GAAD,OAAiB,IAAID,IAAIC,GAAaE,IAAIrB,IAE1C,SAAAmB,GACX,IAAMG,EAAU,IAAIJ,IAAIC,GAExB,OADAG,EAAQC,OAAOvB,GACRsB,KAoBnB,OACI,0BAASnB,UAAU,YAAnB,UACI,qBAAKA,UAAU,QAAf,sBACA,wBAAOA,UAAU,QAAjB,UACI,uBAAOA,UAAU,YAAjB,SACI,qBAAIA,UAAU,MAAd,UACI,6BAAM,MACN,sCACA,sCACA,kDACA,oBAAIqB,QAtBG,WACvB,IAAMC,EAAiBb,EAASc,MAAK,SAACC,EAAGC,GACrC,IAAMC,EAAQ,IAAIC,KAAKH,EAAEnB,YACnBuB,EAAQ,IAAID,KAAKF,EAAEpB,YACzB,OAAIqB,EAAMG,UAAaD,EAAMC,WACnB,EAEC,KAGff,EAAY,YAAIQ,KAYkCtB,UAAU,WAA5C,4BAGR,uBAAOA,UAAU,YAAjB,SACKS,EAASC,KAAI,SAACd,EAASkC,GAAV,OACV,cAAC,EAAD,CAASlC,QAASA,EAASC,GAAID,EAAQC,GAAIC,QAASkB,EAAYe,IAAInC,EAAQC,IAAKE,qBAAsBA,GAA2B+B,WAI9I,wBAAQ9B,UAAU,MAAMqB,QAnCX,WACjB,IAAMW,EAAqBvB,EAASwB,QAAO,SAACrC,GAAD,cAAaoB,QAAb,IAAaA,OAAb,EAAaA,EAAae,IAAInC,EAAQC,OACjFqC,QAAQC,IAAIH,IAiCR,wB,MChDGI,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d98efcc8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Project({ project, id, checked, handleCheckBoxChange }) {\n   \n    const handleChange = () => {\n        handleCheckBoxChange(id, !checked);\n    }\n    return (\n        <tr className=\"row\">\n            <td><input type=\"checkbox\" checked={checked} onChange={handleChange}/></td>\n            <td className=\"upperCase\">{project.name}</td>\n            <td>{project.type}</td>\n            <td>{project.castingDirector}</td>\n            <td>{project.postedDate}</td>\n        </tr>\n    );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport  Project from \"./Project.js\";\nimport \"./projects.css\";\n\n\nfunction ProjectsList(){\n    const { projects:imported  } = require(\"./projects.json\");\n    const importedProjectsWithId = imported.map((importedProject,i)=>{\n        importedProject.id = i;\n        return importedProject;\n    });\n    const [projects, setProjects] = useState(importedProjectsWithId);\n    const [selectedIds, setSelectedIds] = useState(() => new Set());\n    const handleCheckBoxChange = (id, checked) =>{\n        if (checked){\n            setSelectedIds((selectedIds) => new Set(selectedIds).add(id));\n        }else{\n            setSelectedIds(selectedIds => {\n                const tempSet = new Set(selectedIds);\n                tempSet.delete(id);\n                return tempSet;\n            });\n        }\n    }\n    const handleSubmit = () => {\n        const selectedProjects = ( projects.filter((project) => selectedIds?.has(project.id)) );\n        console.log(selectedProjects);\n    }\n    const handlePostDateClick= () =>{\n        const sortedProjects = projects.sort((a, b) => {\n            const aDate = new Date(a.postedDate);\n            const bDate = new Date(b.postedDate);\n            if (aDate.valueOf() <  bDate.valueOf()) {\n              return -1;\n            }else{\n                return 1;\n            }\n        });\n        setProjects([...sortedProjects]);\n    }\n    return (\n        <section className=\"container\">\n            <div className=\"title\">Projects</div>\n            <table className=\"table\">\n                <thead className=\"tableHead\">\n                    <tr className=\"row\">\n                        <th >{\" \"}</th>\n                        <th >Name</th>\n                        <th >Type</th>\n                        <th >Casting Director</th>\n                        <th onClick={handlePostDateClick} className=\"postDate\">Post Date</th>\n                    </tr>\n                </thead>\n                <tbody className=\"tableBody\">\n                    {projects.map((project, index) => \n                        <Project project={project} id={project.id} checked={selectedIds.has(project.id)} handleCheckBoxChange={handleCheckBoxChange} key={index}/> )\n                    }\n                </tbody>\n            </table>\n            <button className=\"btn\" onClick={handleSubmit}>Submit</button>\n        </section>\n    );\n}\nexport default ProjectsList;","import ProjectsList from \"./Projects/ProjectsList.js\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProjectsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}